{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\shareyourdream\\\\shareyourdream\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport HallOfFame, { FAKE_HOF } from './HallOfFame';\nimport shuffle from 'lodash.shuffle';\nimport './App.css';\nimport Card from './Card';\nimport GuessCount from './GuessCount';\nconst SIDE = 6;\nconst SYMBOLS = 'üòÄüéâüíñüé©üê∂üê±ü¶Ñüê¨üåçüåõüåûüí´üçéüçåüçìüçêüçüüçø';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards: this.generateCards(),\n      currentPair: [],\n      guesses: 0,\n      matchedCardIndices: []\n    };\n\n    this.handleCardClick = card => {\n      console.log(card, this);\n    };\n  }\n\n  generateCards() {\n    const result = [];\n    const size = SIDE * SIDE;\n    const candidates = shuffle(SYMBOLS);\n\n    while (result.length < size) {\n      const card = candidates.pop();\n      result.push(card, card);\n    }\n\n    return shuffle(result);\n  }\n\n  render() {\n    const won = new Date().getSeconds() % 2 === 0;\n    return React.createElement(\"div\", {\n      className: \"memory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(GuessCount, {\n      guesses: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), this.cards.map((card, index) => React.createElement(Card, {\n      card: card,\n      feedback: \"visible\",\n      key: index,\n      onClick: this.handleCardClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), won && React.createElement(HallOfFame, {\n      entries: FAKE_HOF,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/wamp64/www/shareyourdream/shareyourdream/src/App.js"],"names":["React","Component","HallOfFame","FAKE_HOF","shuffle","Card","GuessCount","SIDE","SYMBOLS","App","state","cards","generateCards","currentPair","guesses","matchedCardIndices","handleCardClick","card","console","log","result","size","candidates","length","pop","push","render","won","Date","getSeconds","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,IAAqBC,QAArB,QAAqC,cAArC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,OAAO,WAAP;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAIA,MAAMC,IAAI,GAAG,CAAb;AACA,MAAMC,OAAO,GAAG,sCAAhB;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BS,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE,KAAKC,aAAL,EADD;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,OAAO,EAAE,CAHH;AAINC,MAAAA,kBAAkB,EAAE;AAJd,KADkB;;AAAA,SAmB1BC,eAnB0B,GAmBPC,IAAD,IAAU;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,IAAlB;AACD,KArByB;AAAA;;AAQ1BL,EAAAA,aAAa,GAAG;AACd,UAAMQ,MAAM,GAAG,EAAf;AACA,UAAMC,IAAI,GAAGd,IAAI,GAAGA,IAApB;AACA,UAAMe,UAAU,GAAGlB,OAAO,CAACI,OAAD,CAA1B;;AACA,WAAOY,MAAM,CAACG,MAAP,GAAgBF,IAAvB,EAA6B;AAC3B,YAAMJ,IAAI,GAAGK,UAAU,CAACE,GAAX,EAAb;AACAJ,MAAAA,MAAM,CAACK,IAAP,CAAYR,IAAZ,EAAkBA,IAAlB;AACD;;AACD,WAAOb,OAAO,CAACgB,MAAD,CAAd;AACD;;AAMDM,EAAAA,MAAM,GAAG;AACP,UAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,UAAX,KAA0B,CAA1B,KAAgC,CAA5C;AACA,WACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEG,KAAKlB,KAAL,CAAWmB,GAAX,CAAe,CAACb,IAAD,EAAOc,KAAP,KAClB,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEd,IADR;AAEE,MAAA,QAAQ,EAAC,SAFX;AAGE,MAAA,GAAG,EAAEc,KAHP;AAIE,MAAA,OAAO,EAAE,KAAKf,eAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,CAFH,EAUGW,GAAG,IAAI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAExB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVV,CADF;AAcD;;AAvCyB;;AA0C5B,eAAeM,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport HallOfFame, { FAKE_HOF } from './HallOfFame'\nimport shuffle from 'lodash.shuffle'\n\nimport './App.css'\n\nimport Card from './Card'\nimport GuessCount from './GuessCount'\n\n\n\nconst SIDE = 6\nconst SYMBOLS = 'üòÄüéâüíñüé©üê∂üê±ü¶Ñüê¨üåçüåõüåûüí´üçéüçåüçìüçêüçüüçø'\n\nclass App extends Component {\n  state = {\n    cards: this.generateCards(),\n    currentPair: [],\n    guesses: 0,\n    matchedCardIndices: [],\n  }\n\n  generateCards() {\n    const result = []\n    const size = SIDE * SIDE\n    const candidates = shuffle(SYMBOLS)\n    while (result.length < size) {\n      const card = candidates.pop()\n      result.push(card, card)\n    }\n    return shuffle(result)\n  }\n\n  handleCardClick = (card) => {\n    console.log(card, this)\n  }\n\n  render() {\n    const won = new Date().getSeconds() % 2 === 0\n    return (\n      <div className=\"memory\">\n        <GuessCount guesses={0} />\n        {this.cards.map((card, index) => (\n      <Card\n        card={card}\n        feedback=\"visible\"\n        key={index}\n        onClick={this.handleCardClick}\n      />\n    ))}\n        {won && <HallOfFame entries={FAKE_HOF} />}\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}